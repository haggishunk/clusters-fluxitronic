---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  values:
    defaultRules:
      additionalRuleLabels:
        cluster: doks-dev
    alertmanager:
      config:
        route:
          group_by:
          - namespace
          routes:
          - receiver: "null"
            matchers:
            - alertname=~"InfoInhibitor|Watchdog"
            continue: false
          - receiver: slack-nonprod-alerts
            matchers:
            - alertname=~".*"
            continue: false
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
        inhibit_rules:
        # critical shushes warning and info
        - source_matchers:
          - severity="critical"
          target_matchers:
          - severity=~"warning|info"
          equal:
          - namespace
          - alertname
        # warning shushes info
        - source_matchers:
          - severity="warning"
          target_matchers:
          - severity="info"
          equal:
          - namespace
          - alertname
        # shush info alerts if inhibited
        - source_matchers:
          - alertname="InfoInhibitor"
          target_matchers:
          - severity="info"
          equal:
          - namespace
        receivers:
        - name: "null"
        - name: slack-nonprod-alerts
          slack_configs:
          - channel: nonprod-alerts
            # mounted by Alertmanager.spec.secrets -- make sure to specify the file by the secret `.data` key
            api_url_file: /etc/alertmanager/secrets/slack-api-url-nonprod-alerts/url
            pretext: "Alertmanager: Watch Mimir"
        templates:
        - /etc/alertmanager/config/*.tmpl
      ingress:
        enabled: true
        annotations:
          ingress.pomerium.io/policy: |
            allow:
              and:
                - user:
                    is: haggishunk
          ingress.pomerium.io/pass_identity_headers: 'true'
          kubernetes.io/ingress.class: pomerium
        hosts:
        - alertmanager.mattera.io
        paths:
        - /
        pathType: Prefix
      alertmanagerSpec:
        # DEPENDENCY ingress
        externalUrl: https://alertmanager.mattera.io
        # ^^^^^^^^^^^^^^^^^^
        # secrets:
        # # unlocked by external secret
        # - slack-api-url-nonprod-alerts
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: do-block-storage
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
    prometheusOperator:
      namespaces:
        releaseNamespace: true
    prometheus:
      ingress:
        enabled: true
        annotations:
          ingress.pomerium.io/policy: |
            allow:
              and:
                - user:
                    is: haggishunk
          ingress.pomerium.io/pass_identity_headers: 'true'
          kubernetes.io/ingress.class: pomerium
        hosts:
        - prometheus.mattera.io
        paths:
        - /
        pathType: Prefix
      prometheusSpec:
        # DEPENDENCY ingress
        externalUrl: https://prometheus.mattera.io
        # ^^^^^^^^^^^^^^^^^^
        retention: 7d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: do-block-storage
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
    # SUBCHART
    grafana:
      enabled: false
      # these are very useful dashboards configured _for_ grafana _by_ the kube-prometheus-stack chart
      forceDeployDashboards: true
