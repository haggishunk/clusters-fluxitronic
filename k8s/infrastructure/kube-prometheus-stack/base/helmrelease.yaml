---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      version: ">=45.0.0 <46.0.0"
  interval: 1h0m0s
  install:
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
  values:
    defaultRules:
      # labels for filtering, silencing and notifying
      additionalRuleLabels:
        release: monitoring
        role: infrastructure
        source: kube-prometheus-stack
    commonLabels:
      mattera.io/monitor: "true"
    prometheusOperator:
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 128Mi
    alertmanager:
      alertmanagerSpec:
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 50m
            memory: 64Mi
    prometheus:
      prometheusSpec:
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 400m
            memory: 512Mi
        podMonitorNamespaceSelector:
          matchLabels:
            mattera.io/monitor: "true"
        podMonitorSelector:
          matchLabels:
            mattera.io/monitor: "true"
        serviceMonitorNamespaceSelector:
          matchLabels:
            mattera.io/monitor: "true"
        serviceMonitorSelector:
          matchLabels:
            mattera.io/monitor: "true"
        probeNamespaceSelector:
          matchLabels:
            mattera.io/monitor: "true"
        probeSelector:
          matchLabels:
            mattera.io/monitor: "true"
        ruleNamespaceSelector:
          matchLabels:
            mattera.io/monitor: "true"
        ruleSelector:
          matchLabels:
            mattera.io/monitor: "true"
    ## these components are not as useful for managed k8s
    kubeApiServer:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    # SUBCHART
    prometheus-node-exporter:
      priorityClassName: system-cluster-critical
      prometheus:
        monitor:
          enabled: true
          additionalLabels:
            mattera.io/monitor: "true"
          metricRelabelings:
          - action: drop
            regex: node_(arp.*|authorizer.*|cooling.*|nf.*|sockstat.*|softnet.*)
            sourceLabels:
            - __name__
          - action: labeldrop
            regex: mountpoint
        podMonitor:
          enabled: true
          additionalLabels:
            mattera.io/monitor: "true"
          metricRelabelings:
          - action: drop
            regex: node_(arp.*|authorizer.*|cooling.*|nf.*|sockstat.*|softnet.*)
            sourceLabels:
            - __name__
          - action: labeldrop
            regex: mountpoint
    # SUBCHART
    # These metrics are used for mimir metaMonitoring
    kube-state-metrics:
      prometheus:
        monitor:
          enabled: true
          additionalLabels:
            mattera.io/monitor: "true"
      selfMonitor:
        enabled: true
    # SUBCHART
    grafana:
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 100m
          memory: 384Mi
      sidecar:
        alerts:
          enabled: true
          searchNamespace: ALL
        dashboards:
          enabled: true
          searchNamespace: ALL
        datasources:
          enabled: true
          searchNamespace: ALL
        plugins:
          enabled: true
          searchNamespace: ALL
